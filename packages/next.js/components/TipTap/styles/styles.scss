@use './blocks';
@use './headings';

$pad-header-height: 64px;
$pad-toolbar-height: 38px;
$crinkle-time: 0.9s;
$crinkle-transition: ease-out;
$crinkle-fold-bg: #bbb;
$crinkle-unfold-bg: #efefef;

.foldWrapper {
  background-color: #f8f9fa;
  cursor: pointer;
  height: 100%;
  position: absolute;
  width: 100%;
  bottom: 0;
  height: calc(100% - 90px);
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  transition: all $crinkle-time $crinkle-transition;

  .fold {
    width: calc(100% + 2rem + 6px);
    position: relative;
    z-index: 2;
    left: -19px;
    background-color: #f8f9fa;
    padding-right: 4px;
    height: 100%;
    margin-top: -2px;
    transition: all $crinkle-time $crinkle-transition;

    &::after {
      content: "";
      display: block;
      max-height: 50%;
      height: 100%;
      min-height: 5px;
      background-color: #fff;
      width: 100%;
      transform: skew(44deg);
      transition: all $crinkle-time $crinkle-transition;
      border-right: 0;
      border-left: 0;
    }

    &::before {
      content: "";
      display: block;
      max-height: 50%;
      height: 100%;
      min-height: 5px;
      background-color: $crinkle-fold-bg;
      width: 100%;
      transform: skew(-44deg);
      border-bottom: none;
      transition: all $crinkle-time $crinkle-transition;
      box-shadow: 0 1px 5px 1px rgb(0 64 67 / 15%);
      border-right: 0;
      border-left: 0;
    }

    &:last-of-type {

      &::after {
        border: 1px solid #e1e6e7;
        box-shadow: none;
      }
    }
  }
}

.ProseMirror {

  // buttons in heading
  div.heading {
    padding-bottom: 1rem;
    position: relative;
    height: 100%;

    &.opend,
    &.opening {
      .buttonWrapper {
        button.btnFold::before {
          content: '\25BC';
        }
      }
    }

    &.closed,
    &.closing {
      .buttonWrapper {
        button.btnFold::before {
          content: '\25B6';
        }
      }
    }

    &[level="1"] {
      > .wrapBlock > .foldWrapper .fold {
        width: calc(100% + 6px);
        left: 14px;
      }
    }

    &[level="2"] {
      > .wrapBlock > .foldWrapper {
        height: calc(100% - 60px);
      }
    }

    &[level="3"] {
      > .wrapBlock > .foldWrapper {
        height: calc(100% - 50px);
      }
    }

    &[level="4"] {
      > .wrapBlock > .foldWrapper {
        height: calc(100% - 40px);
      }
    }

    &[level="5"] {
      > .wrapBlock > .foldWrapper {
        height: calc(100% - 40px);
      }
    }

    &:is([level="6"], [level="7"], [level="8"], [level="9"], [level="10"]) {
      > .wrapBlock > .foldWrapper {
        height: calc(100% - 40px);
      }
    }

    @keyframes foldCrinkle_after {
      0% {
        transform: skew(0deg);
      }

      100% {
        transform: skew(44deg);
      }
    }

    @keyframes foldCrinkle_before {
      0% {
        transform: skew(0deg);
        background-color: $crinkle-unfold-bg;
      }

      100% {
        transform: skew(-44deg);
        background-color: $crinkle-fold-bg;
      }
    }

    @keyframes unfoldCrinkle_after {
      0% {
        transform: skew(44deg);
      }

      100% {
        transform: skew(0deg);
      }
    }

    @keyframes unfoldCrinkle_before {
      0% {
        transform: skew(-44deg);
        background-color: $crinkle-fold-bg;
      }

      100% {
        transform: skew(0deg);
        background-color: $crinkle-unfold-bg;
      }
    }

    @keyframes unfoldWrapper {
      0% {
        background-color: inherit;
      }

      100% {
        background-color: transparent;
      }
    }

    &.closed {
      > .wrapBlock > .foldWrapper {
        z-index: 2;
      }

      &:hover {

        > .wrapBlock > .foldWrapper ~ .contentWrapper {
          height: 70px !important;
        }

        height: calc(100% - 70px);

        > .wrapBlock > .foldWrapper .fold::before {
          background-color: #ccc;
        }
      }

    }

    &.closing {
      > .wrapBlock > .foldWrapper {
        z-index: 4;
      }
    }

    &.closed,
    &.closing {
      > .wrapBlock > .foldWrapper {
        display: flex;
        z-index: 4;

        .fold::after {
          animation: foldCrinkle_after $crinkle-time $crinkle-transition;
        }

        .fold::before {
          animation: foldCrinkle_before $crinkle-time $crinkle-transition;
        }
      }
    }

    &.opening {
      > .wrapBlock > .foldWrapper {
        .fold {}
      }
    }

    &.opend,
    &.opening {
      > .wrapBlock > .foldWrapper {
        .fold::after {
          animation: unfoldCrinkle_after $crinkle-time $crinkle-transition;
        }

        .fold::before {
          animation: unfoldCrinkle_before $crinkle-time $crinkle-transition;
        }
      }
    }

    &.opend {
      > .wrapBlock > .foldWrapper {
        display: none;
      }
    }
  }

  .wrapBlock {
    height: 100%;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row-reverse;

    .title {
      flex: 1;
      padding-left: 60px;
      margin-left: -100px;
      position: relative;
      z-index: 1;
      min-width: 100%;

      &:hover ~ .buttonWrapper {
        visibility: visible;
      }
    }

    .foldWrapper,
    .contentWrapper {
      width: 100%;
    }

    .buttonWrapper {
      display: flex;
      width: 40px;
      align-items: center;
      position: relative;
      left: -60px;
      z-index: 2;
      visibility: hidden;

      &:hover {
        visibility: visible;
      }

      > a {
        margin-left: 14px;
        color: #ccc;

        &:hover {
          color: #646cff
        }
      }

    }

    .contentWrapper {
      height: auto;
      position: relative;
      display: flex;
      flex-direction: column;
      min-height: 40px;
      z-index: 0;
      padding-bottom: 10px;
      // NOTE: only transition duration is work here! other property are in the js file
      transition: all $crinkle-time $crinkle-transition;

      .foldWrapper {
        transition: all $crinkle-time $crinkle-transition;

        .fold {
          transition: height $crinkle-time $crinkle-transition;
        }
      }

      &.collapsed {
        height: 0;
        padding: 0;
        overflow: hidden;
      }
    }
  }
}



.tiptap__toc{
  .toc__item{
    position: relative;
    width: 100%;
    margin: 6px 0;
    > span{
      display: flex;
      align-items: center;
    }

    &.closed{
      > span .btnFold{
        &::before{
          content: '\25B6';
        }
      }
    }
    > span .btnFold{
      &::before{
        content: '\25BC';
        display: block;
        margin-right: 6px;
        width: 16px;
        height: 16px;
        // border: 2px solid red;
        font-size: 0.7rem;
        text-align: center;
        opacity: 0;
        cursor: pointer;
      }
    }

    &:hover > span > .btnFold::before{
        opacity: 1;
    }
  }
}
