@use './blocks';
@use './headings';
@use './print';
@use './components/index';
@use './daisyui';

$pad-header-height: 64px;
$pad-toolbar-height: 38px;
$crinkle-time: 0.4s;
$crinkle-transition: ease-out;
$crinkle-fold-bg: #ccc;
$crinkle-unfold-bg: #efefef;
$bg-root: #f8f9fa;

.foldWrapper {
  background-color: $bg-root;
  transition: height 0.3s ease-in-out;
  height: 20px;
  cursor: pointer;
  width: 100%;
  bottom: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  transition: height $crinkle-time $crinkle-transition;
  order: 2;

  .fold {
    width: calc(100% + 5rem + 6px);
    position: relative;
    z-index: 2;
    left: -45px;
    background-color: $bg-root;
    padding-right: 4px;
    height: 100%;
    margin-top: -2px;
    transition: height $crinkle-time $crinkle-transition;

    &::after {
      content: '';
      display: block;
      max-height: 50%;
      height: 100%;
      min-height: 5px;
      background-color: #fff;
      width: 100%;
      transform: skew(44deg);
      transition: all $crinkle-time $crinkle-transition;
      border-right: 0;
      border-left: 0;
    }

    &::before {
      content: '';
      display: block;
      max-height: 50%;
      height: 100%;
      min-height: 5px;
      background-color: $crinkle-fold-bg;
      width: 100%;
      transform: skew(-44deg);
      border-bottom: none;
      transition: all $crinkle-time $crinkle-transition;
      box-shadow: 0 1px 5px 1px rgb(0 64 67 / 15%);
      border-right: 0;
      border-left: 0;
    }

    &:last-of-type {
      &::after {
        border: 1px solid #e1e6e7;
        box-shadow: none;
      }
    }
  }
}

.ProseMirror {
  // buttons in heading

  a {
    font-weight: 500;
    color: #646cff;
    text-decoration: inherit;
  }

  a:hover {
    color: #535bf2;
  }
  div.heading {
    position: relative;
    height: 100%;
    // padding-top: .4rem;

    &.closed {
      padding-bottom: 10px;
      &:last-of-type {
        padding-bottom: 0;
      }

      &[level='1'] {
        > .wrapBlock > .foldWrapper .fold {
          // transition: none;
          width: calc(100% + 5rem + 6px);
          left: -45px;
        }
      }
    }

    &[level='1'] {
      > .wrapBlock > .foldWrapper .fold {
        width: calc(100% + 6px);
        left: 39px;
      }
    }

    @keyframes foldCrinkle_after {
      0% {
        transform: skew(0deg);
      }

      100% {
        transform: skew(44deg);
      }
    }

    @keyframes foldCrinkle_before {
      0% {
        transform: skew(0deg);
        background-color: $crinkle-unfold-bg;
      }

      100% {
        transform: skew(-44deg);
        background-color: $crinkle-fold-bg;
      }
    }

    @keyframes unfoldCrinkle_after {
      0% {
        transform: skew(44deg);
      }

      100% {
        transform: skew(0deg);
      }
    }

    @keyframes unfoldCrinkle_before {
      0% {
        transform: skew(-44deg);
        background-color: $crinkle-fold-bg;
      }

      100% {
        transform: skew(0deg);
        background-color: $crinkle-unfold-bg;
      }
    }

    @keyframes unfoldWrapper {
      0% {
        background-color: inherit;
      }

      100% {
        background-color: transparent;
      }
    }

    &.closed {
      > .wrapBlock > .foldWrapper {
        z-index: 2;
      }
    }

    &.closing {
      > .wrapBlock > .foldWrapper {
        z-index: 8;
      }
    }

    &.closed,
    &.closing {
      > .wrapBlock > .foldWrapper {
        display: flex;
        z-index: 8;

        .fold::after {
          animation: foldCrinkle_after $crinkle-time $crinkle-transition;
        }

        .fold::before {
          animation: foldCrinkle_before $crinkle-time $crinkle-transition;
        }
      }
    }

    &.opening {
      > .wrapBlock {
        height: 100%;
      }

      > .wrapBlock > .foldWrapper {
        .fold {
        }
      }

      > .wrapBlock > .contentWrapper {
        opacity: 0;
      }
    }

    &.opend,
    &.opening {
      > .wrapBlock {
        height: 100%;
      }

      > .wrapBlock > .foldWrapper {
        .fold::after {
          animation: unfoldCrinkle_after $crinkle-time $crinkle-transition;
        }

        .fold::before {
          animation: unfoldCrinkle_before $crinkle-time $crinkle-transition;
        }
      }
    }

    &.opend {
      > .wrapBlock > .foldWrapper {
        display: none;
      }

      > .wrapBlock > .contentWrapper {
        opacity: 1;
      }
    }
  }

  .wrapBlock {
    height: 100%;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row-reverse;
    align-items: stretch;

    .title {
      flex: 1;
      padding-left: 60px;
      margin-left: -100px;
      position: relative;
      z-index: 1;
      min-width: 100%;

      &:hover ~ .buttonWrapper {
        visibility: visible;
      }
    }

    .foldWrapper,
    .contentWrapper {
      width: 100%;
    }

    .buttonWrapper {
      display: flex;
      width: 40px;
      align-items: center;
      position: relative;
      left: -40px;
      z-index: 2;
      visibility: hidden;
      order: 1;

      &:hover {
        visibility: visible;
      }

      > .btn_copyLink {
        margin-left: 14px;
        color: #ccc;
        cursor: pointer;
        display: none;

        &:hover {
          color: #646cff;
        }
      }
    }

    .contentWrapper {
      height: auto;
      position: relative;
      display: flex;
      flex-direction: column;
      min-height: 10px;
      z-index: 0;
      // NOTE: only transition duration is work here! other property are in the js file
      transition: all $crinkle-time $crinkle-transition;
      order: 3;

      .foldWrapper {
        // transition: all $crinkle-time $crinkle-transition;

        .fold {
          transition: height $crinkle-time $crinkle-transition;
        }
      }

      &.collapsed {
        height: 0;
        padding: 0;
        opacity: 0;
        overflow: hidden;
      }
    }
  }
}

.nd_modal {
  &.left {
    .modalBg {
      opacity: 0;
      transition: all 0.2s;
      transition-timing-function: linear;

      &.active {
        opacity: 0.4;
      }
    }

    .modalWrapper {
      transform: translateX(-100%);
      transition: all 0.2s linear;

      &.active {
        transform: translateX(0);
      }
    }
  }

  &.bottom {
    .modalBg {
      opacity: 0;
      transition: all 0.2s;
      transition-timing-function: linear;

      &.active {
        opacity: 0.4;
      }
    }

    .modalWrapper {
      transform: translateY(100%);
      transition: all 0.2s linear;

      &.active {
        transform: translateY(0);
      }
    }
  }
}

.tippy-box {
  .hyperlinkLinkModal {
    background-color: #fff;
    border-radius: 10px;
    border: 1px solid #dadce0;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 6px 6px;
    box-shadow: 0 1px 3px 1px rgba(60, 64, 67, 0.15);
    margin-top: -6px;

    .metadata {
      width: 200px;
      display: flex;
      align-items: center;
      justify-content: flex-end;
      flex-direction: row-reverse;
      a {
        font-size: 0.9rem;
        margin-right: 6px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
      img {
        width: 18px;
        height: 18px;
        border-radius: 50%;
        margin-right: 8px;
      }
    }

    .copy {
      margin-left: auto;
    }

    form {
      display: flex;
      align-items: flex-end;
      width: 100%;
      input {
        border: 1px solid #dadce0;
        border-radius: 6px;
        padding: 0.4rem 0.8rem;
        margin-bottom: 0.2rem;
        width: 100%;
        &:last-of-type {
          margin-bottom: 0;
        }
      }
      .buttonsWrapper {
        margin-left: 8px;
        button {
          border-radius: 6px;
          padding: 4px 14px;
          width: 70px;
          margin-bottom: 0.2rem;
          color: #1a73e8;
          &:hover {
            background: rgba(26, 115, 232, 0.04);
            color: #174ea6;
          }
        }
      }
    }

    button {
      width: 30px;
      height: 30px;
      border-radius: 50%;
      margin: 0 0.25rem;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: background-color 0.1s ease-in-out;
      &:hover {
        background-color: #eee;
      }

      > svg {
        width: 16px;
        height: 16px;
      }
    }
  }

  .tippy-svg-arrow {
    top: -12px !important;
    fill: #aaa;
  }
}
