:root {
  --app-height: 100%;
  --app-overFlow-y: auto;
  --app-position_b: 'fixed';
}

.m_mobile {
  html,
  body {
    height: var(--app-height);
    overflow-x: hidden;
    overflow-y: var(--app-overFlow-y);
    position: var(--app-position_b);
    top: 0;
    left: 0;
    width: 100%;
  }

  .tiptap__toc {
    .toc__list {
      flex-wrap: nowrap !important;
      li ul {
        white-space: unset;
      }
    }

    :where(.menu li) {
      flex-wrap: nowrap;
    }

    .toc__item > span .btnFold::before {
      opacity: 1;
    }

    .btn_openChatBox {
      @apply absolute right-2 flex size-8 items-center justify-center overflow-hidden rounded-xl bg-docsy fill-white p-2 text-neutral-content;
      svg {
        // width: 14px;
        // height: 14px;
        fill: #fff;
        display: block;
      }

      .chatLeft {
        fill: #fff;
        position: relative;
        top: 1px;
        display: inline-block;
      }

      // Hide .chatLeft when data-unread-count is not empty
      &[data-unread-count]:not([data-unread-count='']) {
        .chatLeft {
          display: none;
        }
      }

      &::before {
        content: attr(data-unread-count);
        color: #fff;
        margin-top: 3px;
        font-weight: 600;
      }
    }
  }

  .ProseMirror {
    .heading {
      &[level='1'] {
        border: none;
      }
    }

    .title {
      padding-right: 40px;
    }

    .heading:not([level='1']) {
      .btn_openChatBox {
        right: -0px !important;
      }
    }
    .wrapBlock {
      .buttonWrapper {
        visibility: visible !important;
        position: static;
        .btn_openChatBox {
          padding: 6px 0;
          @apply absolute right-3 ml-auto flex items-center overflow-hidden rounded-lg bg-docsy fill-white px-3 text-neutral-content shadow;
          svg {
            width: 18px;
            height: 18px;
            fill: #fff;
            display: block;
          }

          .chatLeft {
            fill: #fff;
            position: relative;
            top: 1px;
            left: -2px;
            display: inline-block;
          }

          // Hide .chatLeft when data-unread-count is not empty
          &[data-unread-count]:not([data-unread-count='']) {
            .chatLeft {
              display: none;
            }
          }

          .arrowDown {
            // margin-left: -6px;
            position: relative;
            left: 6px;
          }

          &::before {
            content: attr(data-unread-count);
            color: #fff;
          }
        }
      }
    }

    div.heading {
      .foldWrapper .fold {
        width: calc(100% + 1rem + 6px);
        left: -12px;
      }

      &.closed {
        &[level='1'] {
          > .wrapBlock > .foldWrapper .fold {
            transition: none;
            width: calc(100% + 1rem + 6px);
            left: -11px;
          }
        }
      }
    }
  }
  .btnDesktopChatBox {
    display: none;
  }
}

.btn_bigBluePencil {
  transition: all 0.3s linear 2s;
  transform: translateY(200%);
  box-shadow:
    0px 4px 8px rgba(0, 0, 0, 0.1),
    0px 8px 16px rgba(0, 0, 0, 0.08),
    0px 16px 24px rgba(0, 0, 0, 0.06);
  &.active {
    transform: translateY(0);
  }
}

.headingSelection {
  &.is-active {
    background-color: #e8f0fe;
    color: #1a73e8;
    border: none;
    box-shadow: 0 0 0 1px #1a73e870;

    svg {
      fill: #1a73e8;
    }

    button {
      &:disabled {
        color: #9e9e9e;
        svg {
          fill: #9e9e9e;
        }
      }
    }
  }
}
