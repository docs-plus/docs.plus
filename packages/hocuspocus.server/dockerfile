# Build Stage
FROM oven/bun:1.2.18-alpine AS builder

# Install system dependencies needed for native modules
RUN apk add --no-cache python3 make g++ git

WORKDIR /app

# Copy dependency files first for better layer caching
COPY package.json bun.lockb* ./
COPY prisma ./prisma/

# Install dependencies and generate Prisma client
RUN bun install --frozen-lockfile --production && \
    bunx prisma generate && \
    bun pm cache rm

# Runtime Stage
FROM oven/bun:1.2.18-alpine

ARG ENVIRONMENT=stage
ENV ENVIRONMENT=$ENVIRONMENT
ENV NODE_ENV=production

# Install runtime dependencies
RUN apk add --no-cache dumb-init

WORKDIR /app

# Copy built dependencies from builder stage
COPY --from=builder --chown=bun:bun /app/node_modules ./node_modules
COPY --from=builder --chown=bun:bun /app/prisma ./prisma

# Copy application code
COPY --chown=bun:bun . .

# Switch to bun user
USER bun

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD bun run healthcheck || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]



CMD ["bunx", "pm2-runtime", "pm2.config.cjs", "--only", "stage_rest,stage_ws"]
